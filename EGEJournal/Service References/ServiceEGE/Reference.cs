//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EGEJournal.ServiceEGE {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> area_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ftp_accessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ppe_class_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ppe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string role_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> area_id {
            get {
                return this.area_idField;
            }
            set {
                if ((this.area_idField.Equals(value) != true)) {
                    this.area_idField = value;
                    this.RaisePropertyChanged("area_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fio {
            get {
                return this.fioField;
            }
            set {
                if ((object.ReferenceEquals(this.fioField, value) != true)) {
                    this.fioField = value;
                    this.RaisePropertyChanged("fio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ftp_access {
            get {
                return this.ftp_accessField;
            }
            set {
                if ((object.ReferenceEquals(this.ftp_accessField, value) != true)) {
                    this.ftp_accessField = value;
                    this.RaisePropertyChanged("ftp_access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ppe_class_number {
            get {
                return this.ppe_class_numberField;
            }
            set {
                if ((this.ppe_class_numberField.Equals(value) != true)) {
                    this.ppe_class_numberField = value;
                    this.RaisePropertyChanged("ppe_class_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ppe_id {
            get {
                return this.ppe_idField;
            }
            set {
                if ((this.ppe_idField.Equals(value) != true)) {
                    this.ppe_idField = value;
                    this.RaisePropertyChanged("ppe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role_name {
            get {
                return this.role_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.role_nameField, value) != true)) {
                    this.role_nameField = value;
                    this.RaisePropertyChanged("role_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Journal", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class Journal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int class_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime exam_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int exam_date_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string journal_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int status_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string status_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int subject_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subject_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int class_number {
            get {
                return this.class_numberField;
            }
            set {
                if ((this.class_numberField.Equals(value) != true)) {
                    this.class_numberField = value;
                    this.RaisePropertyChanged("class_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime exam_date {
            get {
                return this.exam_dateField;
            }
            set {
                if ((this.exam_dateField.Equals(value) != true)) {
                    this.exam_dateField = value;
                    this.RaisePropertyChanged("exam_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int exam_date_id {
            get {
                return this.exam_date_idField;
            }
            set {
                if ((this.exam_date_idField.Equals(value) != true)) {
                    this.exam_date_idField = value;
                    this.RaisePropertyChanged("exam_date_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string journal_name {
            get {
                return this.journal_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.journal_nameField, value) != true)) {
                    this.journal_nameField = value;
                    this.RaisePropertyChanged("journal_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                if ((this.status_idField.Equals(value) != true)) {
                    this.status_idField = value;
                    this.RaisePropertyChanged("status_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status_name {
            get {
                return this.status_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.status_nameField, value) != true)) {
                    this.status_nameField = value;
                    this.RaisePropertyChanged("status_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int subject_id {
            get {
                return this.subject_idField;
            }
            set {
                if ((this.subject_idField.Equals(value) != true)) {
                    this.subject_idField = value;
                    this.RaisePropertyChanged("subject_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subject_name {
            get {
                return this.subject_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.subject_nameField, value) != true)) {
                    this.subject_nameField = value;
                    this.RaisePropertyChanged("subject_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string folder_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string folder_name {
            get {
                return this.folder_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.folder_nameField, value) != true)) {
                    this.folder_nameField = value;
                    this.RaisePropertyChanged("folder_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPE", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int area_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string area_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int class_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool is_tomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppe_full_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int area_id {
            get {
                return this.area_idField;
            }
            set {
                if ((this.area_idField.Equals(value) != true)) {
                    this.area_idField = value;
                    this.RaisePropertyChanged("area_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area_name {
            get {
                return this.area_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.area_nameField, value) != true)) {
                    this.area_nameField = value;
                    this.RaisePropertyChanged("area_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int class_num {
            get {
                return this.class_numField;
            }
            set {
                if ((this.class_numField.Equals(value) != true)) {
                    this.class_numField = value;
                    this.RaisePropertyChanged("class_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_tom {
            get {
                return this.is_tomField;
            }
            set {
                if ((this.is_tomField.Equals(value) != true)) {
                    this.is_tomField = value;
                    this.RaisePropertyChanged("is_tom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_code {
            get {
                return this.ppe_codeField;
            }
            set {
                if ((this.ppe_codeField.Equals(value) != true)) {
                    this.ppe_codeField = value;
                    this.RaisePropertyChanged("ppe_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppe_full_name {
            get {
                return this.ppe_full_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.ppe_full_nameField, value) != true)) {
                    this.ppe_full_nameField = value;
                    this.RaisePropertyChanged("ppe_full_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlankTypes", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class BlankTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int blank_kind_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string short_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int blank_kind_id {
            get {
                return this.blank_kind_idField;
            }
            set {
                if ((this.blank_kind_idField.Equals(value) != true)) {
                    this.blank_kind_idField = value;
                    this.RaisePropertyChanged("blank_kind_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string short_name {
            get {
                return this.short_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.short_nameField, value) != true)) {
                    this.short_nameField = value;
                    this.RaisePropertyChanged("short_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalContent", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class JournalContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int area_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string area_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int audField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int blank_type_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_add_blanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_blanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int exam_date_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ppe_is_tomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int area_id {
            get {
                return this.area_idField;
            }
            set {
                if ((this.area_idField.Equals(value) != true)) {
                    this.area_idField = value;
                    this.RaisePropertyChanged("area_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area_name {
            get {
                return this.area_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.area_nameField, value) != true)) {
                    this.area_nameField = value;
                    this.RaisePropertyChanged("area_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int aud {
            get {
                return this.audField;
            }
            set {
                if ((this.audField.Equals(value) != true)) {
                    this.audField = value;
                    this.RaisePropertyChanged("aud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int blank_type_id {
            get {
                return this.blank_type_idField;
            }
            set {
                if ((this.blank_type_idField.Equals(value) != true)) {
                    this.blank_type_idField = value;
                    this.RaisePropertyChanged("blank_type_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_add_blanks {
            get {
                return this.count_add_blanksField;
            }
            set {
                if ((this.count_add_blanksField.Equals(value) != true)) {
                    this.count_add_blanksField = value;
                    this.RaisePropertyChanged("count_add_blanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_blanks {
            get {
                return this.count_blanksField;
            }
            set {
                if ((this.count_blanksField.Equals(value) != true)) {
                    this.count_blanksField = value;
                    this.RaisePropertyChanged("count_blanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int exam_date_id {
            get {
                return this.exam_date_idField;
            }
            set {
                if ((this.exam_date_idField.Equals(value) != true)) {
                    this.exam_date_idField = value;
                    this.RaisePropertyChanged("exam_date_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_id {
            get {
                return this.ppe_idField;
            }
            set {
                if ((this.ppe_idField.Equals(value) != true)) {
                    this.ppe_idField = value;
                    this.RaisePropertyChanged("ppe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ppe_is_tom {
            get {
                return this.ppe_is_tomField;
            }
            set {
                if ((this.ppe_is_tomField.Equals(value) != true)) {
                    this.ppe_is_tomField = value;
                    this.RaisePropertyChanged("ppe_is_tom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPEExamContent", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPEExamContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EGEJournal.ServiceEGE.PPEExamBlank[] ListPPEExamBlanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string exam_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int exam_date_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EGEJournal.ServiceEGE.PPEExamFile[] exam_filesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool is_uploadedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EGEJournal.ServiceEGE.PPEExamMessage[] messagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_exam_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppe_files_pathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppe_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int status_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string status_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EGEJournal.ServiceEGE.PPEExamBlank[] ListPPEExamBlanks {
            get {
                return this.ListPPEExamBlanksField;
            }
            set {
                if ((object.ReferenceEquals(this.ListPPEExamBlanksField, value) != true)) {
                    this.ListPPEExamBlanksField = value;
                    this.RaisePropertyChanged("ListPPEExamBlanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string exam_date {
            get {
                return this.exam_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.exam_dateField, value) != true)) {
                    this.exam_dateField = value;
                    this.RaisePropertyChanged("exam_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int exam_date_id {
            get {
                return this.exam_date_idField;
            }
            set {
                if ((this.exam_date_idField.Equals(value) != true)) {
                    this.exam_date_idField = value;
                    this.RaisePropertyChanged("exam_date_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EGEJournal.ServiceEGE.PPEExamFile[] exam_files {
            get {
                return this.exam_filesField;
            }
            set {
                if ((object.ReferenceEquals(this.exam_filesField, value) != true)) {
                    this.exam_filesField = value;
                    this.RaisePropertyChanged("exam_files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_uploaded {
            get {
                return this.is_uploadedField;
            }
            set {
                if ((this.is_uploadedField.Equals(value) != true)) {
                    this.is_uploadedField = value;
                    this.RaisePropertyChanged("is_uploaded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EGEJournal.ServiceEGE.PPEExamMessage[] messages {
            get {
                return this.messagesField;
            }
            set {
                if ((object.ReferenceEquals(this.messagesField, value) != true)) {
                    this.messagesField = value;
                    this.RaisePropertyChanged("messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_code {
            get {
                return this.ppe_codeField;
            }
            set {
                if ((this.ppe_codeField.Equals(value) != true)) {
                    this.ppe_codeField = value;
                    this.RaisePropertyChanged("ppe_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_exam_id {
            get {
                return this.ppe_exam_idField;
            }
            set {
                if ((this.ppe_exam_idField.Equals(value) != true)) {
                    this.ppe_exam_idField = value;
                    this.RaisePropertyChanged("ppe_exam_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppe_files_path {
            get {
                return this.ppe_files_pathField;
            }
            set {
                if ((object.ReferenceEquals(this.ppe_files_pathField, value) != true)) {
                    this.ppe_files_pathField = value;
                    this.RaisePropertyChanged("ppe_files_path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_id {
            get {
                return this.ppe_idField;
            }
            set {
                if ((this.ppe_idField.Equals(value) != true)) {
                    this.ppe_idField = value;
                    this.RaisePropertyChanged("ppe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppe_name {
            get {
                return this.ppe_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.ppe_nameField, value) != true)) {
                    this.ppe_nameField = value;
                    this.RaisePropertyChanged("ppe_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                if ((this.status_idField.Equals(value) != true)) {
                    this.status_idField = value;
                    this.RaisePropertyChanged("status_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status_name {
            get {
                return this.status_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.status_nameField, value) != true)) {
                    this.status_nameField = value;
                    this.RaisePropertyChanged("status_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPEExamBlank", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPEExamBlank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int audField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_add_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int count_rField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_exam_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int aud {
            get {
                return this.audField;
            }
            set {
                if ((this.audField.Equals(value) != true)) {
                    this.audField = value;
                    this.RaisePropertyChanged("aud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_1 {
            get {
                return this.count_1Field;
            }
            set {
                if ((this.count_1Field.Equals(value) != true)) {
                    this.count_1Field = value;
                    this.RaisePropertyChanged("count_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_2 {
            get {
                return this.count_2Field;
            }
            set {
                if ((this.count_2Field.Equals(value) != true)) {
                    this.count_2Field = value;
                    this.RaisePropertyChanged("count_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_add_2 {
            get {
                return this.count_add_2Field;
            }
            set {
                if ((this.count_add_2Field.Equals(value) != true)) {
                    this.count_add_2Field = value;
                    this.RaisePropertyChanged("count_add_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count_r {
            get {
                return this.count_rField;
            }
            set {
                if ((this.count_rField.Equals(value) != true)) {
                    this.count_rField = value;
                    this.RaisePropertyChanged("count_r");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_exam_id {
            get {
                return this.ppe_exam_idField;
            }
            set {
                if ((this.ppe_exam_idField.Equals(value) != true)) {
                    this.ppe_exam_idField = value;
                    this.RaisePropertyChanged("ppe_exam_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPEExamFile", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPEExamFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blank_folder_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int blank_type_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blank_type_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EGEJournal.ServiceEGE.FTPFile[] ftp_filesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_exam_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string server_file_folderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int upload_count_filesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string upload_path_filesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string blank_folder_name {
            get {
                return this.blank_folder_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.blank_folder_nameField, value) != true)) {
                    this.blank_folder_nameField = value;
                    this.RaisePropertyChanged("blank_folder_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int blank_type_id {
            get {
                return this.blank_type_idField;
            }
            set {
                if ((this.blank_type_idField.Equals(value) != true)) {
                    this.blank_type_idField = value;
                    this.RaisePropertyChanged("blank_type_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string blank_type_name {
            get {
                return this.blank_type_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.blank_type_nameField, value) != true)) {
                    this.blank_type_nameField = value;
                    this.RaisePropertyChanged("blank_type_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EGEJournal.ServiceEGE.FTPFile[] ftp_files {
            get {
                return this.ftp_filesField;
            }
            set {
                if ((object.ReferenceEquals(this.ftp_filesField, value) != true)) {
                    this.ftp_filesField = value;
                    this.RaisePropertyChanged("ftp_files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_exam_id {
            get {
                return this.ppe_exam_idField;
            }
            set {
                if ((this.ppe_exam_idField.Equals(value) != true)) {
                    this.ppe_exam_idField = value;
                    this.RaisePropertyChanged("ppe_exam_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string server_file_folder {
            get {
                return this.server_file_folderField;
            }
            set {
                if ((object.ReferenceEquals(this.server_file_folderField, value) != true)) {
                    this.server_file_folderField = value;
                    this.RaisePropertyChanged("server_file_folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int upload_count_files {
            get {
                return this.upload_count_filesField;
            }
            set {
                if ((this.upload_count_filesField.Equals(value) != true)) {
                    this.upload_count_filesField = value;
                    this.RaisePropertyChanged("upload_count_files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string upload_path_files {
            get {
                return this.upload_path_filesField;
            }
            set {
                if ((object.ReferenceEquals(this.upload_path_filesField, value) != true)) {
                    this.upload_path_filesField = value;
                    this.RaisePropertyChanged("upload_path_files");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPEExamMessage", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPEExamMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime mes_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_exam_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fio {
            get {
                return this.fioField;
            }
            set {
                if ((object.ReferenceEquals(this.fioField, value) != true)) {
                    this.fioField = value;
                    this.RaisePropertyChanged("fio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime mes_date {
            get {
                return this.mes_dateField;
            }
            set {
                if ((this.mes_dateField.Equals(value) != true)) {
                    this.mes_dateField = value;
                    this.RaisePropertyChanged("mes_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_exam_id {
            get {
                return this.ppe_exam_idField;
            }
            set {
                if ((this.ppe_exam_idField.Equals(value) != true)) {
                    this.ppe_exam_idField = value;
                    this.RaisePropertyChanged("ppe_exam_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_role {
            get {
                return this.user_roleField;
            }
            set {
                if ((object.ReferenceEquals(this.user_roleField, value) != true)) {
                    this.user_roleField = value;
                    this.RaisePropertyChanged("user_role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FTPFile", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class FTPFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string file_folderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string file_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string file_folder {
            get {
                return this.file_folderField;
            }
            set {
                if ((object.ReferenceEquals(this.file_folderField, value) != true)) {
                    this.file_folderField = value;
                    this.RaisePropertyChanged("file_folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string file_name {
            get {
                return this.file_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.file_nameField, value) != true)) {
                    this.file_nameField = value;
                    this.RaisePropertyChanged("file_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                if ((this.sizeField.Equals(value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PPEExam", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
    [System.SerializableAttribute()]
    public partial class PPEExam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int area_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string area_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int class_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int exam_date_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ppe_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ppe_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int status_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string status_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int area_id {
            get {
                return this.area_idField;
            }
            set {
                if ((this.area_idField.Equals(value) != true)) {
                    this.area_idField = value;
                    this.RaisePropertyChanged("area_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area_name {
            get {
                return this.area_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.area_nameField, value) != true)) {
                    this.area_nameField = value;
                    this.RaisePropertyChanged("area_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int class_num {
            get {
                return this.class_numField;
            }
            set {
                if ((this.class_numField.Equals(value) != true)) {
                    this.class_numField = value;
                    this.RaisePropertyChanged("class_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int exam_date_id {
            get {
                return this.exam_date_idField;
            }
            set {
                if ((this.exam_date_idField.Equals(value) != true)) {
                    this.exam_date_idField = value;
                    this.RaisePropertyChanged("exam_date_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_code {
            get {
                return this.ppe_codeField;
            }
            set {
                if ((this.ppe_codeField.Equals(value) != true)) {
                    this.ppe_codeField = value;
                    this.RaisePropertyChanged("ppe_code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ppe_id {
            get {
                return this.ppe_idField;
            }
            set {
                if ((this.ppe_idField.Equals(value) != true)) {
                    this.ppe_idField = value;
                    this.RaisePropertyChanged("ppe_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ppe_name {
            get {
                return this.ppe_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.ppe_nameField, value) != true)) {
                    this.ppe_nameField = value;
                    this.RaisePropertyChanged("ppe_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status_id {
            get {
                return this.status_idField;
            }
            set {
                if ((this.status_idField.Equals(value) != true)) {
                    this.status_idField = value;
                    this.RaisePropertyChanged("status_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status_name {
            get {
                return this.status_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.status_nameField, value) != true)) {
                    this.status_nameField = value;
                    this.RaisePropertyChanged("status_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEGE.IEGESupport")]
    public interface IEGESupport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/ValidateUser", ReplyAction="http://tempuri.org/IEGESupport/ValidateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/ValidateUserFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.UserInfo ValidateUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/ValidateUser", ReplyAction="http://tempuri.org/IEGESupport/ValidateUserResponse")]
        System.IAsyncResult BeginValidateUser(string login, string password, System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.UserInfo EndValidateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetListJournals", ReplyAction="http://tempuri.org/IEGESupport/GetListJournalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetListJournalsFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.Journal[] GetListJournals();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetListJournals", ReplyAction="http://tempuri.org/IEGESupport/GetListJournalsResponse")]
        System.IAsyncResult BeginGetListJournals(System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.Journal[] EndGetListJournals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetListAreas", ReplyAction="http://tempuri.org/IEGESupport/GetListAreasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetListAreasFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.Area[] GetListAreas();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetListAreas", ReplyAction="http://tempuri.org/IEGESupport/GetListAreasResponse")]
        System.IAsyncResult BeginGetListAreas(System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.Area[] EndGetListAreas(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetListPPE", ReplyAction="http://tempuri.org/IEGESupport/GetListPPEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetListPPEFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.PPE[] GetListPPE();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetListPPE", ReplyAction="http://tempuri.org/IEGESupport/GetListPPEResponse")]
        System.IAsyncResult BeginGetListPPE(System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.PPE[] EndGetListPPE(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetListBlankTypes", ReplyAction="http://tempuri.org/IEGESupport/GetListBlankTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetListBlankTypesFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.BlankTypes[] GetListBlankTypes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetListBlankTypes", ReplyAction="http://tempuri.org/IEGESupport/GetListBlankTypesResponse")]
        System.IAsyncResult BeginGetListBlankTypes(System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.BlankTypes[] EndGetListBlankTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetJournalContent", ReplyAction="http://tempuri.org/IEGESupport/GetJournalContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetJournalContentFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.JournalContent[] GetJournalContent(int exam_date_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetJournalContent", ReplyAction="http://tempuri.org/IEGESupport/GetJournalContentResponse")]
        System.IAsyncResult BeginGetJournalContent(int exam_date_id, System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.JournalContent[] EndGetJournalContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/UpdateJournalContent", ReplyAction="http://tempuri.org/IEGESupport/UpdateJournalContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/UpdateJournalContentFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        void UpdateJournalContent(EGEJournal.ServiceEGE.JournalContent content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/UpdateJournalContent", ReplyAction="http://tempuri.org/IEGESupport/UpdateJournalContentResponse")]
        System.IAsyncResult BeginUpdateJournalContent(EGEJournal.ServiceEGE.JournalContent content, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateJournalContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/InsertJournalContent", ReplyAction="http://tempuri.org/IEGESupport/InsertJournalContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/InsertJournalContentFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        int InsertJournalContent(EGEJournal.ServiceEGE.JournalContent content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/InsertJournalContent", ReplyAction="http://tempuri.org/IEGESupport/InsertJournalContentResponse")]
        System.IAsyncResult BeginInsertJournalContent(EGEJournal.ServiceEGE.JournalContent content, System.AsyncCallback callback, object asyncState);
        
        int EndInsertJournalContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/DeleteJournalContent", ReplyAction="http://tempuri.org/IEGESupport/DeleteJournalContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/DeleteJournalContentFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        bool DeleteJournalContent(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/DeleteJournalContent", ReplyAction="http://tempuri.org/IEGESupport/DeleteJournalContentResponse")]
        System.IAsyncResult BeginDeleteJournalContent(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteJournalContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetPPEExamContent", ReplyAction="http://tempuri.org/IEGESupport/GetPPEExamContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetPPEExamContentFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.PPEExamContent GetPPEExamContent(int exam_date_id, int ppe_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetPPEExamContent", ReplyAction="http://tempuri.org/IEGESupport/GetPPEExamContentResponse")]
        System.IAsyncResult BeginGetPPEExamContent(int exam_date_id, int ppe_id, System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.PPEExamContent EndGetPPEExamContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetUploadFileName", ReplyAction="http://tempuri.org/IEGESupport/GetUploadFileNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetUploadFileNameFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        string GetUploadFileName(int ppe_exam_id, string blank_folder_name);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetUploadFileName", ReplyAction="http://tempuri.org/IEGESupport/GetUploadFileNameResponse")]
        System.IAsyncResult BeginGetUploadFileName(int ppe_exam_id, string blank_folder_name, System.AsyncCallback callback, object asyncState);
        
        string EndGetUploadFileName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/UpdatePPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/UpdatePPEExamBlankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/UpdatePPEExamBlankFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        void UpdatePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/UpdatePPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/UpdatePPEExamBlankResponse")]
        System.IAsyncResult BeginUpdatePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePPEExamBlank(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/InsertPPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/InsertPPEExamBlankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/InsertPPEExamBlankFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        int InsertPPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/InsertPPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/InsertPPEExamBlankResponse")]
        System.IAsyncResult BeginInsertPPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, System.AsyncCallback callback, object asyncState);
        
        int EndInsertPPEExamBlank(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/DeletePPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/DeletePPEExamBlankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/DeletePPEExamBlankFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        bool DeletePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/DeletePPEExamBlank", ReplyAction="http://tempuri.org/IEGESupport/DeletePPEExamBlankResponse")]
        System.IAsyncResult BeginDeletePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletePPEExamBlank(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/GetListPPEExam", ReplyAction="http://tempuri.org/IEGESupport/GetListPPEExamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/GetListPPEExamFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        EGEJournal.ServiceEGE.PPEExam[] GetListPPEExam(int exam_date_id, int area_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/GetListPPEExam", ReplyAction="http://tempuri.org/IEGESupport/GetListPPEExamResponse")]
        System.IAsyncResult BeginGetListPPEExam(int exam_date_id, int area_id, System.AsyncCallback callback, object asyncState);
        
        EGEJournal.ServiceEGE.PPEExam[] EndGetListPPEExam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/SetIsUploadPPEExam", ReplyAction="http://tempuri.org/IEGESupport/SetIsUploadPPEExamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/SetIsUploadPPEExamFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        void SetIsUploadPPEExam(int ppe_exam_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/SetIsUploadPPEExam", ReplyAction="http://tempuri.org/IEGESupport/SetIsUploadPPEExamResponse")]
        System.IAsyncResult BeginSetIsUploadPPEExam(int ppe_exam_id, System.AsyncCallback callback, object asyncState);
        
        void EndSetIsUploadPPEExam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/ChangeStatusPPEExam", ReplyAction="http://tempuri.org/IEGESupport/ChangeStatusPPEExamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/ChangeStatusPPEExamFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        void ChangeStatusPPEExam(int ppe_exam_id, int status_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/ChangeStatusPPEExam", ReplyAction="http://tempuri.org/IEGESupport/ChangeStatusPPEExamResponse")]
        System.IAsyncResult BeginChangeStatusPPEExam(int ppe_exam_id, int status_id, System.AsyncCallback callback, object asyncState);
        
        void EndChangeStatusPPEExam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEGESupport/SendPPEMessage", ReplyAction="http://tempuri.org/IEGESupport/SendPPEMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EGEJournal.ServiceEGE.Fault), Action="http://tempuri.org/IEGESupport/SendPPEMessageFaultFault", Name="Fault", Namespace="http://schemas.datacontract.org/2004/07/EGEServiceRun")]
        void SendPPEMessage(EGEJournal.ServiceEGE.PPEExamMessage mes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEGESupport/SendPPEMessage", ReplyAction="http://tempuri.org/IEGESupport/SendPPEMessageResponse")]
        System.IAsyncResult BeginSendPPEMessage(EGEJournal.ServiceEGE.PPEExamMessage mes, System.AsyncCallback callback, object asyncState);
        
        void EndSendPPEMessage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEGESupportChannel : EGEJournal.ServiceEGE.IEGESupport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.UserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.UserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListJournalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListJournalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.Journal[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.Journal[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.Area[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.Area[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListPPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListPPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.PPE[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.PPE[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListBlankTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListBlankTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.BlankTypes[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.BlankTypes[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetJournalContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJournalContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.JournalContent[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.JournalContent[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertJournalContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertJournalContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteJournalContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteJournalContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPPEExamContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPPEExamContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.PPEExamContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.PPEExamContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUploadFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUploadFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertPPEExamBlankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertPPEExamBlankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletePPEExamBlankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletePPEExamBlankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListPPEExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListPPEExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EGEJournal.ServiceEGE.PPEExam[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EGEJournal.ServiceEGE.PPEExam[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EGESupportClient : System.ServiceModel.ClientBase<EGEJournal.ServiceEGE.IEGESupport>, EGEJournal.ServiceEGE.IEGESupport {
        
        private BeginOperationDelegate onBeginValidateUserDelegate;
        
        private EndOperationDelegate onEndValidateUserDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListJournalsDelegate;
        
        private EndOperationDelegate onEndGetListJournalsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListJournalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListAreasDelegate;
        
        private EndOperationDelegate onEndGetListAreasDelegate;
        
        private System.Threading.SendOrPostCallback onGetListAreasCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListPPEDelegate;
        
        private EndOperationDelegate onEndGetListPPEDelegate;
        
        private System.Threading.SendOrPostCallback onGetListPPECompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListBlankTypesDelegate;
        
        private EndOperationDelegate onEndGetListBlankTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetListBlankTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetJournalContentDelegate;
        
        private EndOperationDelegate onEndGetJournalContentDelegate;
        
        private System.Threading.SendOrPostCallback onGetJournalContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateJournalContentDelegate;
        
        private EndOperationDelegate onEndUpdateJournalContentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateJournalContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertJournalContentDelegate;
        
        private EndOperationDelegate onEndInsertJournalContentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertJournalContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteJournalContentDelegate;
        
        private EndOperationDelegate onEndDeleteJournalContentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteJournalContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPPEExamContentDelegate;
        
        private EndOperationDelegate onEndGetPPEExamContentDelegate;
        
        private System.Threading.SendOrPostCallback onGetPPEExamContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUploadFileNameDelegate;
        
        private EndOperationDelegate onEndGetUploadFileNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUploadFileNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePPEExamBlankDelegate;
        
        private EndOperationDelegate onEndUpdatePPEExamBlankDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePPEExamBlankCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertPPEExamBlankDelegate;
        
        private EndOperationDelegate onEndInsertPPEExamBlankDelegate;
        
        private System.Threading.SendOrPostCallback onInsertPPEExamBlankCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePPEExamBlankDelegate;
        
        private EndOperationDelegate onEndDeletePPEExamBlankDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePPEExamBlankCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListPPEExamDelegate;
        
        private EndOperationDelegate onEndGetListPPEExamDelegate;
        
        private System.Threading.SendOrPostCallback onGetListPPEExamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetIsUploadPPEExamDelegate;
        
        private EndOperationDelegate onEndSetIsUploadPPEExamDelegate;
        
        private System.Threading.SendOrPostCallback onSetIsUploadPPEExamCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeStatusPPEExamDelegate;
        
        private EndOperationDelegate onEndChangeStatusPPEExamDelegate;
        
        private System.Threading.SendOrPostCallback onChangeStatusPPEExamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendPPEMessageDelegate;
        
        private EndOperationDelegate onEndSendPPEMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendPPEMessageCompletedDelegate;
        
        public EGESupportClient() {
        }
        
        public EGESupportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EGESupportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EGESupportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EGESupportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<ValidateUserCompletedEventArgs> ValidateUserCompleted;
        
        public event System.EventHandler<GetListJournalsCompletedEventArgs> GetListJournalsCompleted;
        
        public event System.EventHandler<GetListAreasCompletedEventArgs> GetListAreasCompleted;
        
        public event System.EventHandler<GetListPPECompletedEventArgs> GetListPPECompleted;
        
        public event System.EventHandler<GetListBlankTypesCompletedEventArgs> GetListBlankTypesCompleted;
        
        public event System.EventHandler<GetJournalContentCompletedEventArgs> GetJournalContentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateJournalContentCompleted;
        
        public event System.EventHandler<InsertJournalContentCompletedEventArgs> InsertJournalContentCompleted;
        
        public event System.EventHandler<DeleteJournalContentCompletedEventArgs> DeleteJournalContentCompleted;
        
        public event System.EventHandler<GetPPEExamContentCompletedEventArgs> GetPPEExamContentCompleted;
        
        public event System.EventHandler<GetUploadFileNameCompletedEventArgs> GetUploadFileNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePPEExamBlankCompleted;
        
        public event System.EventHandler<InsertPPEExamBlankCompletedEventArgs> InsertPPEExamBlankCompleted;
        
        public event System.EventHandler<DeletePPEExamBlankCompletedEventArgs> DeletePPEExamBlankCompleted;
        
        public event System.EventHandler<GetListPPEExamCompletedEventArgs> GetListPPEExamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetIsUploadPPEExamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeStatusPPEExamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendPPEMessageCompleted;
        
        public EGEJournal.ServiceEGE.UserInfo ValidateUser(string login, string password) {
            return base.Channel.ValidateUser(login, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateUser(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUser(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.UserInfo EndValidateUser(System.IAsyncResult result) {
            return base.Channel.EndValidateUser(result);
        }
        
        private System.IAsyncResult OnBeginValidateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginValidateUser(login, password, callback, asyncState);
        }
        
        private object[] OnEndValidateUser(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.UserInfo retVal = this.EndValidateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateUserCompleted(object state) {
            if ((this.ValidateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserAsync(string login, string password) {
            this.ValidateUserAsync(login, password, null);
        }
        
        public void ValidateUserAsync(string login, string password, object userState) {
            if ((this.onBeginValidateUserDelegate == null)) {
                this.onBeginValidateUserDelegate = new BeginOperationDelegate(this.OnBeginValidateUser);
            }
            if ((this.onEndValidateUserDelegate == null)) {
                this.onEndValidateUserDelegate = new EndOperationDelegate(this.OnEndValidateUser);
            }
            if ((this.onValidateUserCompletedDelegate == null)) {
                this.onValidateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserDelegate, new object[] {
                        login,
                        password}, this.onEndValidateUserDelegate, this.onValidateUserCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.Journal[] GetListJournals() {
            return base.Channel.GetListJournals();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListJournals(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListJournals(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.Journal[] EndGetListJournals(System.IAsyncResult result) {
            return base.Channel.EndGetListJournals(result);
        }
        
        private System.IAsyncResult OnBeginGetListJournals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListJournals(callback, asyncState);
        }
        
        private object[] OnEndGetListJournals(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.Journal[] retVal = this.EndGetListJournals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListJournalsCompleted(object state) {
            if ((this.GetListJournalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListJournalsCompleted(this, new GetListJournalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListJournalsAsync() {
            this.GetListJournalsAsync(null);
        }
        
        public void GetListJournalsAsync(object userState) {
            if ((this.onBeginGetListJournalsDelegate == null)) {
                this.onBeginGetListJournalsDelegate = new BeginOperationDelegate(this.OnBeginGetListJournals);
            }
            if ((this.onEndGetListJournalsDelegate == null)) {
                this.onEndGetListJournalsDelegate = new EndOperationDelegate(this.OnEndGetListJournals);
            }
            if ((this.onGetListJournalsCompletedDelegate == null)) {
                this.onGetListJournalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListJournalsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListJournalsDelegate, null, this.onEndGetListJournalsDelegate, this.onGetListJournalsCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.Area[] GetListAreas() {
            return base.Channel.GetListAreas();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListAreas(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListAreas(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.Area[] EndGetListAreas(System.IAsyncResult result) {
            return base.Channel.EndGetListAreas(result);
        }
        
        private System.IAsyncResult OnBeginGetListAreas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListAreas(callback, asyncState);
        }
        
        private object[] OnEndGetListAreas(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.Area[] retVal = this.EndGetListAreas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListAreasCompleted(object state) {
            if ((this.GetListAreasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListAreasCompleted(this, new GetListAreasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListAreasAsync() {
            this.GetListAreasAsync(null);
        }
        
        public void GetListAreasAsync(object userState) {
            if ((this.onBeginGetListAreasDelegate == null)) {
                this.onBeginGetListAreasDelegate = new BeginOperationDelegate(this.OnBeginGetListAreas);
            }
            if ((this.onEndGetListAreasDelegate == null)) {
                this.onEndGetListAreasDelegate = new EndOperationDelegate(this.OnEndGetListAreas);
            }
            if ((this.onGetListAreasCompletedDelegate == null)) {
                this.onGetListAreasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListAreasCompleted);
            }
            base.InvokeAsync(this.onBeginGetListAreasDelegate, null, this.onEndGetListAreasDelegate, this.onGetListAreasCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.PPE[] GetListPPE() {
            return base.Channel.GetListPPE();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListPPE(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListPPE(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.PPE[] EndGetListPPE(System.IAsyncResult result) {
            return base.Channel.EndGetListPPE(result);
        }
        
        private System.IAsyncResult OnBeginGetListPPE(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListPPE(callback, asyncState);
        }
        
        private object[] OnEndGetListPPE(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.PPE[] retVal = this.EndGetListPPE(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListPPECompleted(object state) {
            if ((this.GetListPPECompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListPPECompleted(this, new GetListPPECompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListPPEAsync() {
            this.GetListPPEAsync(null);
        }
        
        public void GetListPPEAsync(object userState) {
            if ((this.onBeginGetListPPEDelegate == null)) {
                this.onBeginGetListPPEDelegate = new BeginOperationDelegate(this.OnBeginGetListPPE);
            }
            if ((this.onEndGetListPPEDelegate == null)) {
                this.onEndGetListPPEDelegate = new EndOperationDelegate(this.OnEndGetListPPE);
            }
            if ((this.onGetListPPECompletedDelegate == null)) {
                this.onGetListPPECompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListPPECompleted);
            }
            base.InvokeAsync(this.onBeginGetListPPEDelegate, null, this.onEndGetListPPEDelegate, this.onGetListPPECompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.BlankTypes[] GetListBlankTypes() {
            return base.Channel.GetListBlankTypes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListBlankTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListBlankTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.BlankTypes[] EndGetListBlankTypes(System.IAsyncResult result) {
            return base.Channel.EndGetListBlankTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetListBlankTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetListBlankTypes(callback, asyncState);
        }
        
        private object[] OnEndGetListBlankTypes(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.BlankTypes[] retVal = this.EndGetListBlankTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListBlankTypesCompleted(object state) {
            if ((this.GetListBlankTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListBlankTypesCompleted(this, new GetListBlankTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListBlankTypesAsync() {
            this.GetListBlankTypesAsync(null);
        }
        
        public void GetListBlankTypesAsync(object userState) {
            if ((this.onBeginGetListBlankTypesDelegate == null)) {
                this.onBeginGetListBlankTypesDelegate = new BeginOperationDelegate(this.OnBeginGetListBlankTypes);
            }
            if ((this.onEndGetListBlankTypesDelegate == null)) {
                this.onEndGetListBlankTypesDelegate = new EndOperationDelegate(this.OnEndGetListBlankTypes);
            }
            if ((this.onGetListBlankTypesCompletedDelegate == null)) {
                this.onGetListBlankTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListBlankTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetListBlankTypesDelegate, null, this.onEndGetListBlankTypesDelegate, this.onGetListBlankTypesCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.JournalContent[] GetJournalContent(int exam_date_id) {
            return base.Channel.GetJournalContent(exam_date_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJournalContent(int exam_date_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJournalContent(exam_date_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.JournalContent[] EndGetJournalContent(System.IAsyncResult result) {
            return base.Channel.EndGetJournalContent(result);
        }
        
        private System.IAsyncResult OnBeginGetJournalContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int exam_date_id = ((int)(inValues[0]));
            return this.BeginGetJournalContent(exam_date_id, callback, asyncState);
        }
        
        private object[] OnEndGetJournalContent(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.JournalContent[] retVal = this.EndGetJournalContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJournalContentCompleted(object state) {
            if ((this.GetJournalContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJournalContentCompleted(this, new GetJournalContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJournalContentAsync(int exam_date_id) {
            this.GetJournalContentAsync(exam_date_id, null);
        }
        
        public void GetJournalContentAsync(int exam_date_id, object userState) {
            if ((this.onBeginGetJournalContentDelegate == null)) {
                this.onBeginGetJournalContentDelegate = new BeginOperationDelegate(this.OnBeginGetJournalContent);
            }
            if ((this.onEndGetJournalContentDelegate == null)) {
                this.onEndGetJournalContentDelegate = new EndOperationDelegate(this.OnEndGetJournalContent);
            }
            if ((this.onGetJournalContentCompletedDelegate == null)) {
                this.onGetJournalContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJournalContentCompleted);
            }
            base.InvokeAsync(this.onBeginGetJournalContentDelegate, new object[] {
                        exam_date_id}, this.onEndGetJournalContentDelegate, this.onGetJournalContentCompletedDelegate, userState);
        }
        
        public void UpdateJournalContent(EGEJournal.ServiceEGE.JournalContent content) {
            base.Channel.UpdateJournalContent(content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateJournalContent(EGEJournal.ServiceEGE.JournalContent content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateJournalContent(content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateJournalContent(System.IAsyncResult result) {
            base.Channel.EndUpdateJournalContent(result);
        }
        
        private System.IAsyncResult OnBeginUpdateJournalContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.JournalContent content = ((EGEJournal.ServiceEGE.JournalContent)(inValues[0]));
            return this.BeginUpdateJournalContent(content, callback, asyncState);
        }
        
        private object[] OnEndUpdateJournalContent(System.IAsyncResult result) {
            this.EndUpdateJournalContent(result);
            return null;
        }
        
        private void OnUpdateJournalContentCompleted(object state) {
            if ((this.UpdateJournalContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateJournalContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateJournalContentAsync(EGEJournal.ServiceEGE.JournalContent content) {
            this.UpdateJournalContentAsync(content, null);
        }
        
        public void UpdateJournalContentAsync(EGEJournal.ServiceEGE.JournalContent content, object userState) {
            if ((this.onBeginUpdateJournalContentDelegate == null)) {
                this.onBeginUpdateJournalContentDelegate = new BeginOperationDelegate(this.OnBeginUpdateJournalContent);
            }
            if ((this.onEndUpdateJournalContentDelegate == null)) {
                this.onEndUpdateJournalContentDelegate = new EndOperationDelegate(this.OnEndUpdateJournalContent);
            }
            if ((this.onUpdateJournalContentCompletedDelegate == null)) {
                this.onUpdateJournalContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateJournalContentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateJournalContentDelegate, new object[] {
                        content}, this.onEndUpdateJournalContentDelegate, this.onUpdateJournalContentCompletedDelegate, userState);
        }
        
        public int InsertJournalContent(EGEJournal.ServiceEGE.JournalContent content) {
            return base.Channel.InsertJournalContent(content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertJournalContent(EGEJournal.ServiceEGE.JournalContent content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertJournalContent(content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndInsertJournalContent(System.IAsyncResult result) {
            return base.Channel.EndInsertJournalContent(result);
        }
        
        private System.IAsyncResult OnBeginInsertJournalContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.JournalContent content = ((EGEJournal.ServiceEGE.JournalContent)(inValues[0]));
            return this.BeginInsertJournalContent(content, callback, asyncState);
        }
        
        private object[] OnEndInsertJournalContent(System.IAsyncResult result) {
            int retVal = this.EndInsertJournalContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertJournalContentCompleted(object state) {
            if ((this.InsertJournalContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertJournalContentCompleted(this, new InsertJournalContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertJournalContentAsync(EGEJournal.ServiceEGE.JournalContent content) {
            this.InsertJournalContentAsync(content, null);
        }
        
        public void InsertJournalContentAsync(EGEJournal.ServiceEGE.JournalContent content, object userState) {
            if ((this.onBeginInsertJournalContentDelegate == null)) {
                this.onBeginInsertJournalContentDelegate = new BeginOperationDelegate(this.OnBeginInsertJournalContent);
            }
            if ((this.onEndInsertJournalContentDelegate == null)) {
                this.onEndInsertJournalContentDelegate = new EndOperationDelegate(this.OnEndInsertJournalContent);
            }
            if ((this.onInsertJournalContentCompletedDelegate == null)) {
                this.onInsertJournalContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertJournalContentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertJournalContentDelegate, new object[] {
                        content}, this.onEndInsertJournalContentDelegate, this.onInsertJournalContentCompletedDelegate, userState);
        }
        
        public bool DeleteJournalContent(int id) {
            return base.Channel.DeleteJournalContent(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteJournalContent(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteJournalContent(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteJournalContent(System.IAsyncResult result) {
            return base.Channel.EndDeleteJournalContent(result);
        }
        
        private System.IAsyncResult OnBeginDeleteJournalContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginDeleteJournalContent(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteJournalContent(System.IAsyncResult result) {
            bool retVal = this.EndDeleteJournalContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteJournalContentCompleted(object state) {
            if ((this.DeleteJournalContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteJournalContentCompleted(this, new DeleteJournalContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteJournalContentAsync(int id) {
            this.DeleteJournalContentAsync(id, null);
        }
        
        public void DeleteJournalContentAsync(int id, object userState) {
            if ((this.onBeginDeleteJournalContentDelegate == null)) {
                this.onBeginDeleteJournalContentDelegate = new BeginOperationDelegate(this.OnBeginDeleteJournalContent);
            }
            if ((this.onEndDeleteJournalContentDelegate == null)) {
                this.onEndDeleteJournalContentDelegate = new EndOperationDelegate(this.OnEndDeleteJournalContent);
            }
            if ((this.onDeleteJournalContentCompletedDelegate == null)) {
                this.onDeleteJournalContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteJournalContentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteJournalContentDelegate, new object[] {
                        id}, this.onEndDeleteJournalContentDelegate, this.onDeleteJournalContentCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.PPEExamContent GetPPEExamContent(int exam_date_id, int ppe_id) {
            return base.Channel.GetPPEExamContent(exam_date_id, ppe_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPPEExamContent(int exam_date_id, int ppe_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPPEExamContent(exam_date_id, ppe_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.PPEExamContent EndGetPPEExamContent(System.IAsyncResult result) {
            return base.Channel.EndGetPPEExamContent(result);
        }
        
        private System.IAsyncResult OnBeginGetPPEExamContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int exam_date_id = ((int)(inValues[0]));
            int ppe_id = ((int)(inValues[1]));
            return this.BeginGetPPEExamContent(exam_date_id, ppe_id, callback, asyncState);
        }
        
        private object[] OnEndGetPPEExamContent(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.PPEExamContent retVal = this.EndGetPPEExamContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPPEExamContentCompleted(object state) {
            if ((this.GetPPEExamContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPPEExamContentCompleted(this, new GetPPEExamContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPPEExamContentAsync(int exam_date_id, int ppe_id) {
            this.GetPPEExamContentAsync(exam_date_id, ppe_id, null);
        }
        
        public void GetPPEExamContentAsync(int exam_date_id, int ppe_id, object userState) {
            if ((this.onBeginGetPPEExamContentDelegate == null)) {
                this.onBeginGetPPEExamContentDelegate = new BeginOperationDelegate(this.OnBeginGetPPEExamContent);
            }
            if ((this.onEndGetPPEExamContentDelegate == null)) {
                this.onEndGetPPEExamContentDelegate = new EndOperationDelegate(this.OnEndGetPPEExamContent);
            }
            if ((this.onGetPPEExamContentCompletedDelegate == null)) {
                this.onGetPPEExamContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPPEExamContentCompleted);
            }
            base.InvokeAsync(this.onBeginGetPPEExamContentDelegate, new object[] {
                        exam_date_id,
                        ppe_id}, this.onEndGetPPEExamContentDelegate, this.onGetPPEExamContentCompletedDelegate, userState);
        }
        
        public string GetUploadFileName(int ppe_exam_id, string blank_folder_name) {
            return base.Channel.GetUploadFileName(ppe_exam_id, blank_folder_name);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUploadFileName(int ppe_exam_id, string blank_folder_name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUploadFileName(ppe_exam_id, blank_folder_name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUploadFileName(System.IAsyncResult result) {
            return base.Channel.EndGetUploadFileName(result);
        }
        
        private System.IAsyncResult OnBeginGetUploadFileName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ppe_exam_id = ((int)(inValues[0]));
            string blank_folder_name = ((string)(inValues[1]));
            return this.BeginGetUploadFileName(ppe_exam_id, blank_folder_name, callback, asyncState);
        }
        
        private object[] OnEndGetUploadFileName(System.IAsyncResult result) {
            string retVal = this.EndGetUploadFileName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUploadFileNameCompleted(object state) {
            if ((this.GetUploadFileNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUploadFileNameCompleted(this, new GetUploadFileNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUploadFileNameAsync(int ppe_exam_id, string blank_folder_name) {
            this.GetUploadFileNameAsync(ppe_exam_id, blank_folder_name, null);
        }
        
        public void GetUploadFileNameAsync(int ppe_exam_id, string blank_folder_name, object userState) {
            if ((this.onBeginGetUploadFileNameDelegate == null)) {
                this.onBeginGetUploadFileNameDelegate = new BeginOperationDelegate(this.OnBeginGetUploadFileName);
            }
            if ((this.onEndGetUploadFileNameDelegate == null)) {
                this.onEndGetUploadFileNameDelegate = new EndOperationDelegate(this.OnEndGetUploadFileName);
            }
            if ((this.onGetUploadFileNameCompletedDelegate == null)) {
                this.onGetUploadFileNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUploadFileNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUploadFileNameDelegate, new object[] {
                        ppe_exam_id,
                        blank_folder_name}, this.onEndGetUploadFileNameDelegate, this.onGetUploadFileNameCompletedDelegate, userState);
        }
        
        public void UpdatePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud) {
            base.Channel.UpdatePPEExamBlank(exam_blanks, old_aud);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePPEExamBlank(exam_blanks, old_aud, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePPEExamBlank(System.IAsyncResult result) {
            base.Channel.EndUpdatePPEExamBlank(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePPEExamBlank(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.PPEExamBlank exam_blanks = ((EGEJournal.ServiceEGE.PPEExamBlank)(inValues[0]));
            int old_aud = ((int)(inValues[1]));
            return this.BeginUpdatePPEExamBlank(exam_blanks, old_aud, callback, asyncState);
        }
        
        private object[] OnEndUpdatePPEExamBlank(System.IAsyncResult result) {
            this.EndUpdatePPEExamBlank(result);
            return null;
        }
        
        private void OnUpdatePPEExamBlankCompleted(object state) {
            if ((this.UpdatePPEExamBlankCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePPEExamBlankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud) {
            this.UpdatePPEExamBlankAsync(exam_blanks, old_aud, null);
        }
        
        public void UpdatePPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, int old_aud, object userState) {
            if ((this.onBeginUpdatePPEExamBlankDelegate == null)) {
                this.onBeginUpdatePPEExamBlankDelegate = new BeginOperationDelegate(this.OnBeginUpdatePPEExamBlank);
            }
            if ((this.onEndUpdatePPEExamBlankDelegate == null)) {
                this.onEndUpdatePPEExamBlankDelegate = new EndOperationDelegate(this.OnEndUpdatePPEExamBlank);
            }
            if ((this.onUpdatePPEExamBlankCompletedDelegate == null)) {
                this.onUpdatePPEExamBlankCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePPEExamBlankCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePPEExamBlankDelegate, new object[] {
                        exam_blanks,
                        old_aud}, this.onEndUpdatePPEExamBlankDelegate, this.onUpdatePPEExamBlankCompletedDelegate, userState);
        }
        
        public int InsertPPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks) {
            return base.Channel.InsertPPEExamBlank(exam_blanks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertPPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertPPEExamBlank(exam_blanks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndInsertPPEExamBlank(System.IAsyncResult result) {
            return base.Channel.EndInsertPPEExamBlank(result);
        }
        
        private System.IAsyncResult OnBeginInsertPPEExamBlank(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.PPEExamBlank exam_blanks = ((EGEJournal.ServiceEGE.PPEExamBlank)(inValues[0]));
            return this.BeginInsertPPEExamBlank(exam_blanks, callback, asyncState);
        }
        
        private object[] OnEndInsertPPEExamBlank(System.IAsyncResult result) {
            int retVal = this.EndInsertPPEExamBlank(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertPPEExamBlankCompleted(object state) {
            if ((this.InsertPPEExamBlankCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertPPEExamBlankCompleted(this, new InsertPPEExamBlankCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertPPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks) {
            this.InsertPPEExamBlankAsync(exam_blanks, null);
        }
        
        public void InsertPPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, object userState) {
            if ((this.onBeginInsertPPEExamBlankDelegate == null)) {
                this.onBeginInsertPPEExamBlankDelegate = new BeginOperationDelegate(this.OnBeginInsertPPEExamBlank);
            }
            if ((this.onEndInsertPPEExamBlankDelegate == null)) {
                this.onEndInsertPPEExamBlankDelegate = new EndOperationDelegate(this.OnEndInsertPPEExamBlank);
            }
            if ((this.onInsertPPEExamBlankCompletedDelegate == null)) {
                this.onInsertPPEExamBlankCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertPPEExamBlankCompleted);
            }
            base.InvokeAsync(this.onBeginInsertPPEExamBlankDelegate, new object[] {
                        exam_blanks}, this.onEndInsertPPEExamBlankDelegate, this.onInsertPPEExamBlankCompletedDelegate, userState);
        }
        
        public bool DeletePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks) {
            return base.Channel.DeletePPEExamBlank(exam_blanks);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePPEExamBlank(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePPEExamBlank(exam_blanks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeletePPEExamBlank(System.IAsyncResult result) {
            return base.Channel.EndDeletePPEExamBlank(result);
        }
        
        private System.IAsyncResult OnBeginDeletePPEExamBlank(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.PPEExamBlank exam_blanks = ((EGEJournal.ServiceEGE.PPEExamBlank)(inValues[0]));
            return this.BeginDeletePPEExamBlank(exam_blanks, callback, asyncState);
        }
        
        private object[] OnEndDeletePPEExamBlank(System.IAsyncResult result) {
            bool retVal = this.EndDeletePPEExamBlank(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletePPEExamBlankCompleted(object state) {
            if ((this.DeletePPEExamBlankCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePPEExamBlankCompleted(this, new DeletePPEExamBlankCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks) {
            this.DeletePPEExamBlankAsync(exam_blanks, null);
        }
        
        public void DeletePPEExamBlankAsync(EGEJournal.ServiceEGE.PPEExamBlank exam_blanks, object userState) {
            if ((this.onBeginDeletePPEExamBlankDelegate == null)) {
                this.onBeginDeletePPEExamBlankDelegate = new BeginOperationDelegate(this.OnBeginDeletePPEExamBlank);
            }
            if ((this.onEndDeletePPEExamBlankDelegate == null)) {
                this.onEndDeletePPEExamBlankDelegate = new EndOperationDelegate(this.OnEndDeletePPEExamBlank);
            }
            if ((this.onDeletePPEExamBlankCompletedDelegate == null)) {
                this.onDeletePPEExamBlankCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePPEExamBlankCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePPEExamBlankDelegate, new object[] {
                        exam_blanks}, this.onEndDeletePPEExamBlankDelegate, this.onDeletePPEExamBlankCompletedDelegate, userState);
        }
        
        public EGEJournal.ServiceEGE.PPEExam[] GetListPPEExam(int exam_date_id, int area_id) {
            return base.Channel.GetListPPEExam(exam_date_id, area_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListPPEExam(int exam_date_id, int area_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListPPEExam(exam_date_id, area_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EGEJournal.ServiceEGE.PPEExam[] EndGetListPPEExam(System.IAsyncResult result) {
            return base.Channel.EndGetListPPEExam(result);
        }
        
        private System.IAsyncResult OnBeginGetListPPEExam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int exam_date_id = ((int)(inValues[0]));
            int area_id = ((int)(inValues[1]));
            return this.BeginGetListPPEExam(exam_date_id, area_id, callback, asyncState);
        }
        
        private object[] OnEndGetListPPEExam(System.IAsyncResult result) {
            EGEJournal.ServiceEGE.PPEExam[] retVal = this.EndGetListPPEExam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListPPEExamCompleted(object state) {
            if ((this.GetListPPEExamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListPPEExamCompleted(this, new GetListPPEExamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListPPEExamAsync(int exam_date_id, int area_id) {
            this.GetListPPEExamAsync(exam_date_id, area_id, null);
        }
        
        public void GetListPPEExamAsync(int exam_date_id, int area_id, object userState) {
            if ((this.onBeginGetListPPEExamDelegate == null)) {
                this.onBeginGetListPPEExamDelegate = new BeginOperationDelegate(this.OnBeginGetListPPEExam);
            }
            if ((this.onEndGetListPPEExamDelegate == null)) {
                this.onEndGetListPPEExamDelegate = new EndOperationDelegate(this.OnEndGetListPPEExam);
            }
            if ((this.onGetListPPEExamCompletedDelegate == null)) {
                this.onGetListPPEExamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListPPEExamCompleted);
            }
            base.InvokeAsync(this.onBeginGetListPPEExamDelegate, new object[] {
                        exam_date_id,
                        area_id}, this.onEndGetListPPEExamDelegate, this.onGetListPPEExamCompletedDelegate, userState);
        }
        
        public void SetIsUploadPPEExam(int ppe_exam_id) {
            base.Channel.SetIsUploadPPEExam(ppe_exam_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetIsUploadPPEExam(int ppe_exam_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetIsUploadPPEExam(ppe_exam_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetIsUploadPPEExam(System.IAsyncResult result) {
            base.Channel.EndSetIsUploadPPEExam(result);
        }
        
        private System.IAsyncResult OnBeginSetIsUploadPPEExam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ppe_exam_id = ((int)(inValues[0]));
            return this.BeginSetIsUploadPPEExam(ppe_exam_id, callback, asyncState);
        }
        
        private object[] OnEndSetIsUploadPPEExam(System.IAsyncResult result) {
            this.EndSetIsUploadPPEExam(result);
            return null;
        }
        
        private void OnSetIsUploadPPEExamCompleted(object state) {
            if ((this.SetIsUploadPPEExamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetIsUploadPPEExamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetIsUploadPPEExamAsync(int ppe_exam_id) {
            this.SetIsUploadPPEExamAsync(ppe_exam_id, null);
        }
        
        public void SetIsUploadPPEExamAsync(int ppe_exam_id, object userState) {
            if ((this.onBeginSetIsUploadPPEExamDelegate == null)) {
                this.onBeginSetIsUploadPPEExamDelegate = new BeginOperationDelegate(this.OnBeginSetIsUploadPPEExam);
            }
            if ((this.onEndSetIsUploadPPEExamDelegate == null)) {
                this.onEndSetIsUploadPPEExamDelegate = new EndOperationDelegate(this.OnEndSetIsUploadPPEExam);
            }
            if ((this.onSetIsUploadPPEExamCompletedDelegate == null)) {
                this.onSetIsUploadPPEExamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetIsUploadPPEExamCompleted);
            }
            base.InvokeAsync(this.onBeginSetIsUploadPPEExamDelegate, new object[] {
                        ppe_exam_id}, this.onEndSetIsUploadPPEExamDelegate, this.onSetIsUploadPPEExamCompletedDelegate, userState);
        }
        
        public void ChangeStatusPPEExam(int ppe_exam_id, int status_id) {
            base.Channel.ChangeStatusPPEExam(ppe_exam_id, status_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeStatusPPEExam(int ppe_exam_id, int status_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeStatusPPEExam(ppe_exam_id, status_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndChangeStatusPPEExam(System.IAsyncResult result) {
            base.Channel.EndChangeStatusPPEExam(result);
        }
        
        private System.IAsyncResult OnBeginChangeStatusPPEExam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ppe_exam_id = ((int)(inValues[0]));
            int status_id = ((int)(inValues[1]));
            return this.BeginChangeStatusPPEExam(ppe_exam_id, status_id, callback, asyncState);
        }
        
        private object[] OnEndChangeStatusPPEExam(System.IAsyncResult result) {
            this.EndChangeStatusPPEExam(result);
            return null;
        }
        
        private void OnChangeStatusPPEExamCompleted(object state) {
            if ((this.ChangeStatusPPEExamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeStatusPPEExamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeStatusPPEExamAsync(int ppe_exam_id, int status_id) {
            this.ChangeStatusPPEExamAsync(ppe_exam_id, status_id, null);
        }
        
        public void ChangeStatusPPEExamAsync(int ppe_exam_id, int status_id, object userState) {
            if ((this.onBeginChangeStatusPPEExamDelegate == null)) {
                this.onBeginChangeStatusPPEExamDelegate = new BeginOperationDelegate(this.OnBeginChangeStatusPPEExam);
            }
            if ((this.onEndChangeStatusPPEExamDelegate == null)) {
                this.onEndChangeStatusPPEExamDelegate = new EndOperationDelegate(this.OnEndChangeStatusPPEExam);
            }
            if ((this.onChangeStatusPPEExamCompletedDelegate == null)) {
                this.onChangeStatusPPEExamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeStatusPPEExamCompleted);
            }
            base.InvokeAsync(this.onBeginChangeStatusPPEExamDelegate, new object[] {
                        ppe_exam_id,
                        status_id}, this.onEndChangeStatusPPEExamDelegate, this.onChangeStatusPPEExamCompletedDelegate, userState);
        }
        
        public void SendPPEMessage(EGEJournal.ServiceEGE.PPEExamMessage mes) {
            base.Channel.SendPPEMessage(mes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendPPEMessage(EGEJournal.ServiceEGE.PPEExamMessage mes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendPPEMessage(mes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendPPEMessage(System.IAsyncResult result) {
            base.Channel.EndSendPPEMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendPPEMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EGEJournal.ServiceEGE.PPEExamMessage mes = ((EGEJournal.ServiceEGE.PPEExamMessage)(inValues[0]));
            return this.BeginSendPPEMessage(mes, callback, asyncState);
        }
        
        private object[] OnEndSendPPEMessage(System.IAsyncResult result) {
            this.EndSendPPEMessage(result);
            return null;
        }
        
        private void OnSendPPEMessageCompleted(object state) {
            if ((this.SendPPEMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendPPEMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendPPEMessageAsync(EGEJournal.ServiceEGE.PPEExamMessage mes) {
            this.SendPPEMessageAsync(mes, null);
        }
        
        public void SendPPEMessageAsync(EGEJournal.ServiceEGE.PPEExamMessage mes, object userState) {
            if ((this.onBeginSendPPEMessageDelegate == null)) {
                this.onBeginSendPPEMessageDelegate = new BeginOperationDelegate(this.OnBeginSendPPEMessage);
            }
            if ((this.onEndSendPPEMessageDelegate == null)) {
                this.onEndSendPPEMessageDelegate = new EndOperationDelegate(this.OnEndSendPPEMessage);
            }
            if ((this.onSendPPEMessageCompletedDelegate == null)) {
                this.onSendPPEMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendPPEMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendPPEMessageDelegate, new object[] {
                        mes}, this.onEndSendPPEMessageDelegate, this.onSendPPEMessageCompletedDelegate, userState);
        }
    }
}
